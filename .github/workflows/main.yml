name: workflow

on:
  push:
    branches:
        - main
    path-ignore:
        - 'README.md'

jobs:
    integration:
        name: Continous Integration
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Lint code
              run: echo "Linting repository"

            - name: Run unit tests
              run: echo "Running unit tests"

    build-and-push-ecr-image:
        name: Continous Delivery
        needs: integration
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Install Utilities
              run: |
                sudo apt-get update
                sudo apt-get install -y jq unzip
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, Tag, and Push Image to Amazon ECR
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
                IMAGE_TAG: latest
              run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    Continous-Deployment:
        name: Continuous Deployment
        needs: build-and-push-ecr-image
        runs-on: self-hosted
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Pull latest image
              run: |
                docker pull ${{steps.login-ecr.outputs.registry}}/${{secrets.ECR_REPOSITORY_NAME}}:latest

            - name: Stop and remove existing container
              # THIS IS THE CORRECTION: This step is now enabled to prevent the "container name in use" error.
              run: |
                if [ $(docker ps -q -f name=networksecurity) ]; then
                    docker stop networksecurity
                    docker rm networksecurity
                fi

            - name: Run Docker Image to serve users
              run: |
                docker run -d -p 8080:8080 --ipc="host" --name=networksecurity ${{steps.login-ecr.outputs.registry}}/${{secrets.ECR_REPOSITORY_NAME}}:latest

            - name: Clean Previous Images
              run: |
                # This prunes all unused images to save disk space.
                docker image prune -a -f

